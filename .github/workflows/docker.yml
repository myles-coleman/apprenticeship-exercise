name: Exercise

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: checkout
      uses: actions/checkout@v4

    - uses: actions/setup-node@v3
      with:
        node-version: '12'

    - name: Get the short SHA of the commit
      id: get_sha
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: echo "SHA=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
      
    - name: build dockerfile
      run:  docker build -t response-app:${{ env.SHA }} .

    - name: run application
      run:  sudo docker run -d -p 80:80 response-app:${{ env.SHA }}

    - name: run tests
      uses: liatrio/github-actions/apprentice-action@808117af9b4a1e57c4cb79dbcb2d25de5ea3c68d

  push_to_registry:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    steps:
      
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Get the short SHA of the commit
        id: get_sha
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: echo "SHA=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
    
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: beebecomebigbee/apprenticeship-exercise:${{ env.SHA }}
    
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  push_to_GKE:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      CLUSTER_ZONE: ${{ secrets.CLUSTER_ZONE }}
    needs: build
    steps:

      - name: checkout
        uses: actions/checkout@v3

      - name: Get the short SHA of the commit
        id: get_sha
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: echo "SHA=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_ENV
      
      - name: Google auth
        id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' 

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: '${{ env.PROJECT_ID }}'
   
      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ env.CLUSTER_ZONE }}-docker.pkg.dev

      - name: build dockerfile
        run:  docker build -t ${{ env.CLUSTER_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/apprenticeship-exercise:${{ env.SHA }} .

      - name: Push to Artifact Registry
        run: |-
          docker push \
          ${{ env.CLUSTER_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/apprenticeship-exercise:${{ env.SHA }}

      - name: Install Google Cloud SDK
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - 
          sudo apt-get update -y 
          sudo apt-get install google-cloud-cli -y
    
      - name: Install GKE-Auth plugin
        run: |-
          sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
 
      - name: Get GKE credentials
        run: |-
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.CLUSTER_ZONE }} --project ${{ env.PROJECT_ID }}

      - name: Apply Deployment Manifest
        run: |-
          kubectl apply -f manifests/deployment.yml

      - name: Update Deployment Server
        run: |-
          kubectl set image deployment/apprenticeship-exercise \
          apprenticeship-exercise=${{ env.CLUSTER_ZONE }}-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-repo/apprenticeship-exercise:${{ env.SHA }}